@page "/users"
@inject UserService UserService

<div class="d-flex mb-2 align-items-center justify-content-between w-100">
    <h3 class="fw-bold">All users</h3>
    <div>
        <a class="btn btn-md btn-primary mb-0" href="/users/new">New</a>
    </div>
</div>

<input type="text"
       @bind="searchTerm"
       @oninput="OnSearchChanged"
       class="form-control mb-4"
       placeholder="Search by name or email..."
       style="max-width: 300px;" />

<table class="table table-hover table-striped table-bordered">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th style="width: 100px;"></th>
        </tr>
    </thead>
    <tbody>
        @if (filteredUsers == null)
        {
            <tr><td colspan="3">Loading...</td></tr>
        }
        else if (filteredUsers.Count == 0)
        {
            <tr><td colspan="3">No users found.</td></tr>
        }
        else
        {
            @foreach (var user in filteredUsers)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td class="text-center">
                        <a class="btn btn-sm btn-primary" href="/users/edit/@user.Id">Edit</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<User> allUsers = new();
    private List<User> filteredUsers = new();
    private string? searchTerm;

    protected override async Task OnInitializedAsync()
    {
        allUsers = await UserService.GetAllAsync();
        ApplyFilters();
    }

    private void OnSearchChanged(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString();
        ApplyFilters();
    }

    private void ApplyFilters()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredUsers = allUsers;
        }
        else
        {
            var lower = searchTerm.Trim().ToLower();
            filteredUsers = allUsers
                .Where(u =>
                    (!string.IsNullOrEmpty(u.Name) && u.Name.ToLower().Contains(lower)) ||
                    (!string.IsNullOrEmpty(u.Email) && u.Email.ToLower().Contains(lower)))
                .ToList();
        }
    }
}
