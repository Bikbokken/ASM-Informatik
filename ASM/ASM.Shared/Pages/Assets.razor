@page "/assets"
@inject AssetService AssetService

<div class="d-flex mb-2 align-items-center justify-content-between w-100">
    <h3 class="fw-bold">Alle Aktiver</h3>
    <div>
        <a class="btn btn-md btn-primary mb-0" href="/assets/new">Opret ny</a>
    </div>
</div>

<table class="table table-hover table-striped table-bordered">
        <thead class="table-light">
            <tr>
                <th>Navn</th>
                <th>Model</th>
                <th>Serienummer</th>
                <th>Kategori</th>
                <th>Status</th>
                <th>Placering</th>
                <th>Ansvarlig</th>
                <th>Indkøbsdato</th>
                <th>Pris</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var asset in filteredAssets)
            {
                <tr>
                    <td>@asset.Name</td>
                    <td>@asset.Model</td>
                    <td>@asset.SerialNumber</td>
                    <td>@asset.Category?.Name</td>
                    <td>
                        <span class="badge @GetStatusBadgeClass(asset.CurrentStatus)">
                            @asset.CurrentStatus
                        </span>
                    </td>
                    <td>@asset.Location?.Name</td>
                    <td>@asset.ResponsibleUser?.Name</td>
                    <td>@asset.PurchaseDate.ToShortDateString()</td>
                    <td>@asset.Price.ToString("C")</td>
                    <td class="text-center">
                        <a class="btn btn-sm btn-primary" href="/asset/@asset.Id">Rediger</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

@code {
    private List<Asset> filteredAssets = new();
    private List<AssetCategory> categories = new();

    private string? selectedStatus;
    private int? selectedCategoryId;

    private readonly string[] statuses = new[]
    {
    "Tilgængelig", "I brug", "Udlånt", "Til reparation", "Udfaset"
};

    protected override async Task OnInitializedAsync()
    {
        categories = await AssetService.GetCategoriesAsync();
        await LoadAssetsAsync();
    }

    private async Task LoadAssetsAsync()
    {
        filteredAssets = await AssetService.GetFilteredAssetsAsync(selectedStatus, selectedCategoryId);
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Tilgængelig" => "bg-success text-white",
            "I brug" => "bg-primary text-white",
            "Udlånt" => "bg-warning text-dark",
            "Til reparation" => "bg-danger text-white",
            "Udfaset" => "bg-secondary text-white",
            _ => "bg-light text-dark"
        };
    }

    private async void OnCategoryChanged(int? categoryId)
    {
        selectedCategoryId = categoryId;
        await LoadAssetsAsync();
    }

    private async void OnStatusChanged(string status)
    {
        selectedStatus = status;
        await LoadAssetsAsync();
    }

}
