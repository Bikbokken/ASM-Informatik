@page "/"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="card shadow-lg rounded">
                    <div class="card-body">
                        <h4 class="card-title text-center mb-4">Login</h4>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">@errorMessage</div>
                        }

                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                            <ValidationMessage For="@(() => loginModel.Username)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>
                        <div class="mb-3">
                            <p>Your organisation has disabled signups. Contact your System Administrator for login.</p>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Log In</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        if (loginModel.Username == "admin" && loginModel.Password == "password")
        {
            errorMessage = null;
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = "Invalid username or password.";
        }

        await Task.CompletedTask;
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = "";
    }
}
