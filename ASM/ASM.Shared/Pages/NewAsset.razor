@page "/assets/new"
@inject NavigationManager Nav

@inject AssetService AssetService
@inject AssetCategoryService AssetCategoryService
@inject LocationService LocationService
@inject UserService UserService

<style>
    label {
        margin-bottom: 0 !important;
    }
</style>
<h3 class="fw-bold mb-2">New Asset</h3>

<EditForm Model="@asset" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-md-6">
            <label class="form-label fw-bold">Name</label>
            <InputText class="form-control" placeholder="Name" @bind-Value="asset.Name" />
        </div>

        <div class="col-md-6">
            <label class="form-label fw-bold">Serial Number</label>
            <InputText class="form-control" placeholder="Serial Number" @bind-Value="asset.SerialNumber" />
        </div>

        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold">Model</label>
            <InputText class="form-control" placeholder="Model" @bind-Value="asset.Model" />
        </div>

        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold">Date of purchase</label>
            <InputDate class="form-control" placeholder="Date of purchase" @bind-Value="asset.PurchaseDate" />
        </div>

        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold">Price (DKK)</label>
            <InputNumber class="form-control" placeholder="Price" @bind-Value="asset.Price" />
        </div>

        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold">Status</label>
            <InputSelect class="form-select" @bind-Value="asset.CurrentStatus">
                @foreach (var status in statuses)
                {
                    <option value="@status">@status</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold ">Category</label>
            <InputSelect class="form-select" @bind-Value="asset.CategoryId">
                <option value="">Choose Category</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.Id">@cat.Name</option>
                }
            </InputSelect>
        </div>


        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold">Location</label>
            <InputSelect class="form-select" @bind-Value="asset.LocationId">
                <option value="">None</option>
                @foreach (var loc in locations)
                {
                    <option value="@loc.Id">@loc.Name</option>
                }
            </InputSelect>
        </div>

        <div class="col-md-6 mt-3">
            <label class="form-label fw-bold">User</label>
            <InputSelect class="form-select" @bind-Value="asset.ResponsibleUserId">
                <option value="">None</option>
                @foreach (var user in users)
                {
                    <option value="@user.Id">@user.Name</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="d-flex align-items-start">
        <button type="submit" class="btn btn-success mt-4">Create</button>
        <a href="/assets" class="btn btn-secondary mt-4 ms-2">Cancel</a>
    </div>

</EditForm>

@code {
    private Asset asset = new()
        {
            PurchaseDate = DateTime.Today,
            CurrentStatus = "Tilgængelig"

        };

    private List<AssetCategory> categories = new();
    private List<Location> locations = new();
    private List<User> users = new();

    private readonly string[] statuses = new[]
    {
        "Tilgængelig", "I brug", "Udlånt", "Til reparation", "Udfaset"
    };

    protected override async Task OnInitializedAsync()
    {
        categories = await AssetCategoryService.GetAllAsync();
        locations = await LocationService.GetAllAsync();
        users = await UserService.GetAllAsync();
    }

    private async Task HandleValidSubmit()
    {
        asset.CreatedAt = DateTime.UtcNow;
        asset.UpdatedAt = DateTime.UtcNow;

        await AssetService.CreateAssetAsync(asset);

        Nav.NavigateTo("/assets");
    }
}
